###############################################################################
##gne#  
###  DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU'RE DOING.
###
###  OVERRIDE SETTINGS IN A make.local FILE.
###
###############################################################################

OS = $(shell uname)
BIN_PATH = $(PROJ_PATH)/bin
EXT_PATH = $(PROJ_PATH)/external
INC_PATH = $(PROJ_PATH)/include
SRC_PATH = $(PROJ_PATH)/src
DAT_PATH = $(PROJ_PATH)/data

CCC = g++
CC  = gcc
CPP = gcc
CXX = g++
LDCONFIG = /sbin/ldconfig


# compile and link debug symbols (set to 1 in make.local)
PROJ_DEBUG_SYMBOLS = 0

# force 32-bit compile (set to 1 in make.local)
PROJ_FORCE_32BIT = 0
ifeq (,$(MACHTYPE))
  MACHTYPE = $(shell uname -m)
endif
ifeq (,$(findstring x86_64,$(MACHTYPE)))
  PROJ_FORCE_32BIT = 1
endif



# initialize extra libraries
EXTLIB = 


# Default settings above.  Then we load user overrides. 


# include local user make.local to override any settings
ifeq ($(wildcard $(PROJ_PATH)/make.local), $(PROJ_PATH)/make.local)
  -include $(PROJ_PATH)/make.local
endif


# Set up variables based on the settings.



PLAT_CFLAGS = 
PLAT_LFLAGS = 

#Platform
# define apple on max os x
ifeq ($(OS), Darwin)
  PLAT_CFLAGS += -D__APPLE__
  LDCONFIG = true
endif

# mac os x flags (YOU NEED TO BUILD WITH a gcc3.5+ via homebrew, macports, or a manual install)
ifeq ($(OS), Darwin)
  ifeq ($(strip $(PROJ_FORCE_32BIT)), 0)
    PLAT_CFLAGS += -march=x86-64
    PLAT_LFLAGS += -march=x86-64
  else
    PLAT_CFLAGS += -march=i386
    PLAT_LFLAGS += -march=i386
  endif
endif





# external libraries that we need to link to 
# assume a jake installation and just point through jake
JAKE_PATH = $(EXT_PATH)/jake
JAKE_CFLAGS = -I$(JAKE_PATH)/include 
JAKE_LFLAGS = -L$(JAKE_PATH)/_bin -ljakeImage -ljakeVideo -ljakeDist
DARWIN_PATH = $(JAKE_PATH)/external/darwin
DARWIN_CFLAGS = -I$(DARWIN_PATH)/include -I$(DARWIN_PATH)/external
DARWIN_LFLAGS = -L$(DARWIN_PATH)/bin -ldrwnVision -ldrwnML -ldrwnPGM -ldrwnIO -ldrwnBase -lm -lpthread
OPENCV_CFLAGS = `pkg-config --cflags $(JAKE_PATH)/external/opencv.pc`
OPENCV_LFLAGS = `pkg-config --libs $(JAKE_PATH)/external/opencv.pc`
FFMPEG_PATH = $(JAKE_PATH)/external/ffmpeg
FFMPEG_CFLAGS = -I$(FFMPEG_PATH)/include
FFMPEG_LFLAGS = -L$(FFMPEG_PATH)/lib -lswscale -lavformat -lavcodec -lavutil
OPENMPI_CFLAGS = -I/usr/include/mpi
HDF5_PATH = $(JAKE_PATH)/hdf5
HDF5_CFLAGS = -I$(JAKE_PATH)/include -I/usr/include/mpi
HDF5_LFLAGS = -L$(JAKE_PATH)/lib -lhdf5
BOOST_CFLAGS = -I/home/vtangira/Downloads/boost_1_53_0/
# So the -L here specifies a compile time linkage. Conceptually the LD_LIBRARY_PATH will help the link time and the run time
# setup the library paths correctly. Using LD_LIBRARY_PATH is not really a good thing. For multiple reasons ofcourse. So anyway the best thing to do is
# to specify to the compiler via -L where your lib so objects are at link time and via -Wl,-rpath,dir at run time. The way it works is that at compile
# time it looks for the lib and makes note of it but forgets at run time. There is a -R option out there that does an equivalent but
# I can't really find docs for it. (I suspect it is a solaris thing?). Anyway, the waut it is does here is that -Wl specifies linker options and -rpath
# specifies run time path. The tldp HOWTO is an awesome read.
BOOST_LFLAGS = -L/home/vtangira/Downloads/boost_1_53_0/stage/lib/ -lboost_system -lboost_filesystem -Wl,-rpath,/home/vtangira/Downloads/boost_1_53_0/stage/lib/
FFTW_LFLAGS = -lfftw3 -lm
POSELETS_LFLAGS = -I/home/vtangira/Downloads/poselets.cpp/include
POSELETS_CFLAGS = -L/home/vtangira/Downloads/poselets.cpp/lib

EXTRA_CFLAGS += $(JAKE_CFLAGS) $(DARWIN_CFLAGS) $(OPENCV_CFLAGS) $(FFMPEG_CFLAGS) $(OPENMPI_CFLAGS) $(HDF5_CFLAGS) $(BOOST_CFLAGS) $(POSELETS_CFLAGS)
EXTRA_LFLAGS += $(JAKE_LFLAGS) $(DARWIN_LFLAGS) $(OPENCV_LFLAGS) $(FFMPEG_LFLAGS) $(HDF5_LFLAGS) $(BOOST_LFLAGS) $(FFTW_LFLAGS) $(POSELETS_LFLAGS)


# external binaries we need
CXXTEST = $(JAKE_PATH)/external/cxxtest
CXXTESTGEN = $(CXXTEST)/bin/cxxtestgen


ifeq ($(strip $(PROJ_FORCE_32BIT)), 0)
  CFLAGS = -O3 -fPIC $(PLAT_CFLAGS) $(EXTRA_CFLAGS) -I/home/vtangira/Downloads/poselets.cpp/include -Wall -g
  LFLAGS = $(PLAT_LFLAGS) $(EXTLIB) $(EXTRA_LFLAGS) -lm -lpthread
else
  CFLAGS = -O3 -m32 $(PLAT_CFLAGS) $(EXTRA_CFLAGS) -Wall -g
  LFLAGS = -m32 $(PLAT_LFLAGS) $(EXTLIB) $(EXTRA_LFLAGS) -lm -lpthread
endif

ifeq ($(strip $(PROJ_DEBUG_SYMBOLS)), 1)
  CFLAGS += -g
  LFLAGS += -g
endif
